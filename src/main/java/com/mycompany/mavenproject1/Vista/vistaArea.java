/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.mavenproject1.Vista;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author infraver
 */
public class vistaArea extends javax.swing.JDialog {
    
    vistaPrincipal padre;
    PreparedStatement ps;
    ResultSet rs;
    DefaultTableModel dtmArea;
    
    int id;
    String nombreArea;

    public vistaArea(vistaPrincipal padre, boolean modal) {
        super(padre, modal);
        this.padre = padre;
        initComponents();
        setTitle("Areas");
        Border borde = new TitledBorder("Nombre Área");
        jtfArea.setBorder(borde);
        jtfArea.setColumns(10);
        this.dtmArea = (DefaultTableModel) this.TablaArea.getModel();
        
        loadDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jtfArea = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaArea = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.add(jtfArea);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1904677-add-addition-calculate-charge-create-new-plus_122527.png"))); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel3.add(btnAgregar);

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pencil-striped-symbol-for-interface-edit-buttons_icon-icons.com_56782.png"))); // NOI18N
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel3.add(btnActualizar);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        TablaArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Área"
            }
        ));
        TablaArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaArea);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (jtfArea.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo vacio", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
           agregar();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void TablaAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaAreaMouseClicked
        try {
            this.rs.absolute(this.TablaArea.getSelectedRow() + 1);
            this.id = this.rs.getInt("idArea");
            this.nombreArea = this.rs.getString("nombreArea");
            jtfArea.setText(this.nombreArea);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_TablaAreaMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (jtfArea.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Campo vacio", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
        editar(id);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaArea;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtfArea;
    // End of variables declaration//GEN-END:variables

    private void loadDatos() {
        String sQuery = "SELECT idArea, nombreArea FROM Area ";
        if (this.padre.db.conn != null) {
        try {
                ps = this.padre.db.conn.prepareStatement(sQuery, ResultSet.TYPE_SCROLL_SENSITIVE,
                        ResultSet.CONCUR_READ_ONLY);
                rs = ps.executeQuery();

                this.dtmArea.setRowCount(0);
                while (rs.next()) {
                    this.dtmArea.addRow(new Object[]{
                        rs.getString("idArea"),
                        rs.getString("nombreArea"),
                    });
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Hubo un error", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println(e);
            }
        }
    }
    
    
   private void agregar() {
        String sQuery = """
                        insert into Area (nombreArea) values(?)
                        """;
        if (this.padre.db.conn != null) {
            try {
                ps = this.padre.db.conn.prepareStatement(sQuery, ResultSet.TYPE_SCROLL_SENSITIVE,
                        ResultSet.CONCUR_READ_ONLY);
                ps.setString(1, jtfArea.getText().toUpperCase());
                ps.execute(); 
                loadDatos();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Tienes un error", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } 

    private void editar(int id) {
        String sQuery = "UPDATE Area set nombreArea = ? where idArea = ?";
        if (this.padre.db.conn != null) {
            try {
                ps = this.padre.db.conn.prepareStatement(sQuery, ResultSet.TYPE_SCROLL_SENSITIVE,
                        ResultSet.CONCUR_READ_ONLY);
                ps.setString(1, jtfArea.getText().toUpperCase());
                ps.setInt(2, id);
                ps.executeUpdate();
                loadDatos();
                jtfArea.setText("");
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }
    
    
   
   
   
}
